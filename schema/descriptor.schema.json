{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "id": "http://github.com/boutiques/boutiques-schema",
    "type": "object",
    "title": "Tool",
    "properties": {
        "name": {
            "id": "http://github.com/boutiques/boutiques-schema/name",
            "minLength": 1,
            "description": "Tool name.",
            "type": "string"
        },
        "tool-version": {
            "id": "http://github.com/boutiques/boutiques-schema/description",
            "minLength": 1,
            "description": "Tool version.",
            "type": "string"
        },
        "description": {
            "id": "http://github.com/boutiques/boutiques-schema/description",
            "minLength": 1,
            "description": "Tool description.",
            "type": "string"
        },
        "command-line": {
            "id": "http://github.com/boutiques/boutiques-schema/command-line",
            "minLength": 1,
            "description": "A string that describes the tool command line, where input and output values are identified by \"keys\". At runtime, command-line keys are substituted with flags and values.",
            "type": "string"
        },
        "docker-image": {
            "id": "http://github.com/boutiques/boutiques-schema/docker-image",
            "minLength": 1,
            "description": "Name of a Docker image where tool is installed and configured. Example: docker.io/neurodebian.",
            "type": "string"
        },
        "docker-index": {
            "id": "http://github.com/boutiques/boutiques-schema/docker-index",
            "minLength": 1,
            "description": "Docker index where Docker image is available.",
            "default": "http://index.docker.io",
            "type": "string"
        },
        "schema-version": {
            "id": "http://github.com/boutiques/boutiques-schema/schema-version",
            "type": "string",
            "description": "Version of the schema used.",
            "enum": ["0.2", "0.3"]
        },
        "walltime-estimate": {
            "id": "http://github.com/boutiques/boutiques-schema/walltime-estimate",
            "type": "number",
            "description": "Estimated wall time of a task in seconds.",
            "minLength": 1
        },
        "environment-variables": {
            "id": "http://github.com/boutiques/boutiques-schema/environment-variables",
            "type": "array",
            "description": "An array of key-value pairs specifying environment variable names and their values to be used in the execution environment.",
            "items": {
                "id": "http://github.com/boutiques/boutiques-schema/environment-variable",
                "type": "object",
                "properties": {
                    "name": {
                        "id": "http://github.com/boutiques/boutiques-schema/environment-variable/name",
                        "minLength": 1,
                        "description": "The environment variable name (identifier) containing only alphanumeric characters and underscores. Example: \"PROGRAM_PATH\".",
                        "type": "string",
                        "pattern": "^[a-z,A-Z][0-9,_,a-z,A-Z]*$"
                    },
                    "value": {
                        "id": "http://github.com/boutiques/boutiques-schema/environment-variable/value",
                        "description": "The value of the environment variable.",
                        "type": "string"
                    },
                    "description": {
                        "id": "http://github.com/boutiques/boutiques-schema/environment-variable/description",
                        "description": "Description of the environment variable.",
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "value"
                ]
            }
        },
        "groups": {
            "id": "http://github.com/boutiques/boutiques-schema/groups",
            "description": "Sets of identifiers of inputs, each specifying an input group.",
            "type": "array",
            "items": {
                "id": "http://github.com/boutiques/boutiques-schema/group",
                "type": "object",
                "properties": {
                    "id": {
                        "id": "http://github.com/boutiques/boutiques-schema/group/id",
                        "minLength": 1,
                        "description": "A short, unique, informative identifier containing only alphanumeric characters and underscores. Typically used to generate variable names. Example: \"outfile_group\".",
                        "type": "string",
                        "pattern": "^[0-9,_,a-z,A-Z]*$"
                    },
                    "name": {
                        "id": "http://github.com/boutiques/boutiques-schema/group/name",
                        "minLength": 1,
                        "description": "A human-readable name for the input group.",
                        "type": "string"
                    },
                    "description": {
                        "id": "http://github.com/boutiques/boutiques-schema/group/description",
                        "description": "Description of the input group.",
                        "type": "string"
                    },
                    "members": {
                        "id": "http://github.com/boutiques/boutiques-schema/group/members",
                        "description": "IDs of the inputs belonging to this group.",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "minLength": 1,
                            "pattern": "^[0-9,_,a-z,A-Z]*$"
                        }
                    },
                    "mutually-exclusive": {
                        "id": "http://github.com/boutiques/boutiques-schema/group/mutually-exclusive",
                        "description": "True if only one input in the group may be active at runtime.",
                        "type": "boolean"
                    },
                    "one-is-required": {
                        "id": "http://github.com/boutiques/boutiques-schema/group/one-is-required",
                        "description": "True if at least one of the inputs in the group must be active at runtime.",
                        "type": "boolean"
                    }
                },
                "required": [
                    "name",
                    "id",
                    "members"
                ]
            }
        },
        "inputs": {
            "id": "http://github.com/boutiques/boutiques-schema/inputs",
            "type": "array",
            "items": {
                "id": "http://github.com/boutiques/boutiques-schema/input",
                "type": "object",
                "properties": {
                    "id": {
                        "id": "http://github.com/boutiques/boutiques-schema/input/id",
                        "minLength": 1,
                        "description": "A short, unique, informative identifier containing only alphanumeric characters and underscores. Typically used to generate variable names. Example: \"data_file\".",
                        "type": "string",
                        "pattern": "^[0-9,_,a-z,A-Z]*$"
                    },
                    "name": {
                        "id": "http://github.com/boutiques/boutiques-schema/input/name",
                        "minLength": 1,
                        "description": "A human-readable input name. Example: 'Data file'.",
                        "type": "string"
                    },
                    "type": {
                        "id": "http://github.com/boutiques/boutiques-schema/input/type",
                        "type": "string",
                        "description": "Input type.",
                        "enum": ["String", "File", "Flag", "Number", "Enum", "XPath", "JsonPath", "Config", "Session", "Subject", "Scan", "Project"]
                    },
                    "description": {
                        "id": "http://github.com/boutiques/boutiques-schema/input/description",
                        "description": "Input description.",
                        "type": "string"
                    },
                    "command-line-key": {
                        "id": "http://github.com/boutiques/boutiques-schema/input/command-line-key",
                        "description": "A string contained in command-line, substituted by the input value and/or flag at runtime.",
                        "type": "string"
                    },
                    "list": {
                        "id": "http://github.com/boutiques/boutiques-schema/input/list",
                        "description":"True if input is a list of value. An input of type \"Flag\" or \"Enum\" cannot be a list.",
                        "type": "boolean"
                    },
                    "optional": {
                        "id": "http://github.com/boutiques/boutiques-schema/input/optional",
                        "description": "True if input is optional.",
                        "type": "boolean"
                    },
                    "command-line-flag": {
                        "id": "http://github.com/boutiques/boutiques-schema/input/command-line-flag",
                        "description": "Option flag of the input, involved in the command-line-key substitution. Inputs of type \"Flag\" have to have a command-line flag. Examples: -v, --force.",
                        "type": "string"
                    },
                    "requires-inputs": {
                        "id": "http://github.com/boutiques/boutiques-schema/output/required-inputs",
                        "description": "Ids of the inputs which must be active for this input to be available.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "disables-inputs": {
                        "id": "http://github.com/boutiques/boutiques-schema/output/disabled-by-inputs",
                        "description": "Ids of the inputs that are disabled when this input is active.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "command-line-flag-separator": {
                        "id": "http://github.com/boutiques/boutiques-schema/input/command-line-flag-separator",
                        "description": "Separator used between flags and their arguments. Defaults to a single space.",
                        "type": "string"
                    },
                    "default-value": {
                        "id": "http://github.com/boutiques/boutiques-schema/input/default-value",
                        "description": "Default value of the input, used by the tool when no option is specified."
                    },
                    "enum-value-choices": {
                        "id": "http://github.com/boutiques/boutiques-schema/input/enum-value-choices",
                        "description": "Permitted choices for input value. May only be used in conjunction with the enum type.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "integer": {
                        "id": "http://github.com/boutiques/boutiques-schema/input/integer",
                        "description": "Specify whether the input should be an integer. May only be used with Number type inputs.",
                        "type": "boolean"
                    },
                    "minimum": {
                        "id": "http://github.com/boutiques/boutiques-schema/input/minimum",
                        "description": "Specify the minimum value of the input (inclusive). May only be used with Number type inputs.",
                        "type": "number"
                    },
                    "maximum": {
                        "id": "http://github.com/boutiques/boutiques-schema/input/maximum",
                        "description": "Specify the maximum value of the input (inclusive). May only be used with Number type inputs.",
                        "type": "number"
                    },
                    "exclusive-minimum": {
                        "id": "http://github.com/boutiques/boutiques-schema/input/exclusive-minimum",
                        "description": "Specify whether the minimum is exclusive or not. May only be used with Number type inputs.",
                        "type": "boolean"
                    },
                    "exclusive-maximum": {
                        "id": "http://github.com/boutiques/boutiques-schema/input/exclusive-maximum",
                        "description": "Specify whether the maximum is exclusive or not. May only be used with Number type inputs.",
                        "type": "boolean"
                    },
                    "min-list-entries": {
                        "id": "http://github.com/boutiques/boutiques-schema/input/min-list-entries",
                        "description": "Specify the minimum number of entries in the list. May only be used with List type inputs.",
                        "type": "number"
                    },
                    "max-list-entries": {
                        "id": "http://github.com/boutiques/boutiques-schema/input/max-list-entries",
                        "description": "Specify the maximum number of entries in the list. May only be used with List type inputs.",
                        "type": "number"
                    }
                },
                "required": [
                    "name",
                    "id",
                    "type"
                ],
                "anyOf": [
                  {
                    "properties": {
                      "type": { "enum": ["Flag"] },
                      "list": { "enum": [false] }
                    }
                  },
                  {
                    "properties": {
                      "type": { "enum": ["String", "File", "Number", "Enum", "XPath", "JsonPath", "Config", "Session", "Subject", "Scan", "Project"] }
                    }
                  }
                ],
                "additionalProperties": true,
                "dependencies": {
                    "command-line-flag-separator": ["command-line-flag"],
                    "min-list-entries": ["list"],
                    "max-list-entries": ["list"],
                    "enum-value-choices": {
                        "properties": {
                            "type": {"enum": ["Enum"]}
                        }
                    },
                    "integer": {
                        "properties": {
                            "type": {"enum": ["Number"]}
                        }
                    },
                    "minimum": {
                        "properties": {
                            "type": {"enum": ["Number"]}
                        }
                    },
                    "maximum": {
                        "properties": {
                            "type": {"enum": ["Number"]}
                        }
                    },
                    "exclusive-minimum": {
                        "properties": {
                            "type": {"enum": ["Number"]}
                        }
                    },
                    "exclusive-maximum": {
                        "properties": {
                            "type": {"enum": ["Number"]}
                        }
                    },
                    "exclusive-minimum": ["minimum"],
                    "exclusive-maximum": ["maximum"]
                }

            }
        },
        "output-files": {
            "id": "http://github.com/boutiques/boutiques-schema/output-files",
            "type": "array",
            "items": {
                "id": "http://github.com/boutiques/boutiques-schema/output",
                "type": "object",
                "properties": {
                    "id": {
                        "id": "http://github.com/boutiques/boutiques-schema/output/id",
                        "minLength": 1,
                        "description": "A short, unique, informative identifier containing only alphanumeric characters and underscores. Typically used to generate variable names. Example: \"data_file\"",
                        "pattern": "^[0-9,_,a-z,A-Z]*$",
                        "type": "string"
                    },
                    "name": {
                        "id": "http://github.com/boutiques/boutiques-schema/output/name",
                        "description": "A human-readable output name. Example: 'Data file'",
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "id": "http://github.com/boutiques/boutiques-schema/output/description",
                        "description": "Output description.",
                        "type": "string"
                    },
                    "command-line-key": {
                        "id": "http://github.com/boutiques/boutiques-schema/output/command-line-key",
                        "description": "A string contained in command-line, substituted by the output value and/or flag at runtime.",
                        "type": "string"
                    },
                    "path-template": {
                        "id": "http://github.com/boutiques/boutiques-schema/output/path-template",
                        "description": "Describes the output file path relatively to the execution directory. May contain input command-line-keys. Example: \"results/[INPUT1]_brain.mnc\".",
                        "minLength": 1,
                        "type": "string"
                    },
                    "path-template-stripped-extensions": {
                        "id": "http://github.com/boutiques/boutiques-schema/output/path-template-stripped-extensions",
                        "description": "List of file extensions that will be stripped from the input values before being substituted in the path template. Example: [\".nii\",\".nii.gz\"].",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "list": {
                        "id": "http://github.com/boutiques/boutiques-schema/output/list",
                        "description": "True if output is a list of value.",
                        "type": "boolean"
                    },
                    "optional":{
                        "id": "http://github.com/boutiques/boutiques-schema/output/optional",
                        "description": "True if output may not be produced by the tool.",
                        "type": "boolean"
                    },
                    "command-line-flag":{
                        "id": "http://github.com/boutiques/boutiques-schema/output/command-line-flag",
                        "description": "Option flag of the output, involved in the command-line-key substitution. Examples: -o, --output",
                        "type": "string"
                    }

                },
                "required": [
                    "id",
                    "name",
                    "path-template"
                ]
            }
        }
    },
    "required": [
        "name",
        "description",
        "command-line",
        "schema-version",
        "inputs",
        "output-files",
        "tool-version"
    ]
}

